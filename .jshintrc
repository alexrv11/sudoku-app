{
    "maxerr" : 50, // {int} Maximum error before stopping
    // Enforcing
    "bitwise" : true, // true: Prohibit bitwise operators (&, |, ^, etc.)
    "camelcase" : true, // true: Identifiers must be in camelCase
    "curly" : true, // true: Require {} for every new block or scope
    "eqeqeq" : true, // true: Require triple equals (===) for comparison
    "forin" : true, // true: Require filtering for..in loops with obj.hasOwnProperty()
    "freeze" : true, // true: prohibits overwriting prototypes of native objects such as Array, Date etc.
    "indent" : 4, // {int} Number of spaces to use for indentation
    "latedef" : true, // true: Require variables/functions to be defined before being used
    "newcap" : true, // true: Require capitalization of all constructor functions e.g. `new F()`
    "noarg" : true, // true: Prohibit use of `arguments.caller` and `arguments.callee`
    "noempty" : true, // true: Prohibit use of empty blocks
    "nonew" : true, // true: Prohibit use of constructors for side-effects (without assignment)
    "plusplus" : false, // true: Prohibit use of `++` & `--`
    "quotmark" : "single", // Quotation mark consistency:
    "undef" : true, // true: Require all non-global variables to be declared (prevents global leaks)
    "unused" : true, // true: Require all defined variables be used
    "strict" : false, // true: Requires all functions run in ES5 Strict Mode
    "maxparams" : false, // {int} Max number of formal params allowed per function
    "maxdepth" : 5, // {int} Max depth of nested blocks (within functions)
    "maxstatements" : false, // {int} Max number statements per function
    "maxcomplexity" : false, // {int} Max cyclomatic complexity per function
    "maxlen" : 120, // {int} Max number of characters per line
    // Relaxing
    "asi" : false, // true: Tolerate Automatic Semicolon Insertion (no semicolons)
    "debug" : true, // true: Allow debugger statements e.g. browser breakpoints.
    "eqnull" : false, // true: Tolerate use of `== null`
    "es5" : false, // true: Allow ES5 syntax (ex: getters and setters)
    "evil" : false, // true: Tolerate use of `eval` and `new Function()`
    "expr" : true, // true: Tolerate `ExpressionStatement` as Programs
    "lastsemic" : false, // true: Tolerate omitting a semicolon for the last statement of a 1-line block
    "shadow" : true, // true: Allows re-define variables later in code e.g. `var x=1; x=2;`
    "sub" : true, // true: Tolerate using `[]` notation when it can still be expressed in dot notation
    "globals" : {
        "module": false,
        "require": false,
        "it": false,
        "describe": false,
        "expect": false,
        "process": false,
        "console": false,
        "__dirname": false,
        "angular": false,
        "beforeEach": false,
        "inject": false,
        "afterEach": false,
        "spyOn": false,
        "$": false,
        "_": false,
        "Masonry": false,
        "eventie": false,
        "imagesLoaded": false,
        "classie": false,
        "jasmine": false
    }
}
